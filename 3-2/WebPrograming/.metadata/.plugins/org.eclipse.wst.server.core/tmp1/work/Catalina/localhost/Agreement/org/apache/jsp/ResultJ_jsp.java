/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2018-01-17 23:11:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;

public final class ResultJ_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>결과</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      beans.IPadress IP = null;
      IP = (beans.IPadress) _jspx_page_context.getAttribute("IP", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (IP == null){
        IP = new beans.IPadress();
        _jspx_page_context.setAttribute("IP", IP, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");

      out.write("\r\n");
      out.write("\r\n");

	String agreeable = request.getParameter("radio");
	String name = request.getParameter("data_name");	//이름
	String birthday =request.getParameter("data_birth");	//생년월일 ex)19010101
	String number =  request.getParameter("data_phone");	//휴대폰 번호
	String time =  request.getParameter("time");
	
	String IPAdress = IP.getIPAdress();
	
	
	boolean flag = true;

	
	if(agreeable.equals("agree")){
		if(name == ""){
			out.println("<script>alert('이름을 입력해주세요.'); </script>");
			flag = false;
		}
		else if(birthday.equals(null) || birthday.length() != 8){
			out.println("<script>alert('생년월일을 정확히 입력해주세요.');</script>");
			flag = false;
		}
		else if(!birthday.substring (0,2).equals("19")  && !birthday.substring (0,2).equals("20")) {
			out.println("<script>alert('연도을 정확히 입력해주세요.');</script>");
			flag = false;
		}
		else if(!birthday.substring (4,5).equals("0")  && !birthday.substring (4,5).equals("1")) {
			out.println("<script>alert('12월을 초과합니다.');</script>");
			flag = false;
		}
		else if(!birthday.substring (6,7).equals("0")  && !birthday.substring (6,7).equals("1") && !birthday.substring (6,7).equals("2") && !birthday.substring (6,7).equals("3")) {
			out.println("<script>alert('31일을 초과합니다.');</script>");
			flag = false;
		}
		else if(number.equals(null) || number.length() != 11){
			out.println("<script>alert('휴대폰번호를 정확히 입력해주세요.');</script>");
			flag = false;
		}
		else if(!number.substring (0,2).equals("01")) {
			out.println("<script>alert('휴대폰번호를 정확히 입력해주세요.');</script>");
			flag = false;
		}
		else {
			if(birthday.substring (4,5).equals("1") && !birthday.substring (5,6).equals("0") && !birthday.substring (5,6).equals("1") && !birthday.substring (5,6).equals("2")) {
				out.println("<script>alert('12월을 초과합니다.');</script>");
				flag = false;
			}
			else if(birthday.substring (4,5).equals("0") && birthday.substring (5,6).equals("0")) {
				out.println("<script>alert('00월을 사용할 수 없습니다.');</script>");
				flag = false;
			}
			else if(birthday.substring (6,7).equals("3") && !birthday.substring (7,8).equals("0") && !birthday.substring (7,8).equals("1")) {
				out.println("<script>alert('31일을 초과합니다.');</script>");
				flag = false;
			}
			else if(birthday.substring (6,7).equals("0") && birthday.substring (7,8).equals("0")) {
				out.println("<script>alert('00일을 사용할 수 없습니다.');</script>");
				flag = false;
			}
			else if(!birthday.substring (0,4).equals("1988") && !birthday.substring (0,4).equals("1992") && !birthday.substring (0,4).equals("1996") &&
					!birthday.substring (0,4).equals("2000") && birthday.substring (4,6).equals("02")) {
				if(birthday.substring (6,8).equals("29") || birthday.substring (6,7).equals("3")) {
					out.println("<script>alert('28일을 초과했습니다.');</script>");
					flag = false;
				}
			}
			else if(birthday.substring (0,4).equals("1988") || birthday.substring (0,4).equals("1992") || birthday.substring (0,4).equals("1996") ||
					birthday.substring (0,4).equals("2000") ) {
				if(birthday.substring (4,6).equals("02") && !birthday.substring (6,7).equals("0") && !birthday.substring (6,7).equals("1") && !birthday.substring (6,7).equals("2")) {
					out.println("<script>alert('29일을 초과했습니다.');</script>");
					flag = false;
						
				}
			}
			else if(birthday.substring (4,6).equals("04") || birthday.substring (4,6).equals("06") || birthday.substring (4,6).equals("09") || birthday.substring (4,6).equals("11")) {
				if(birthday.substring (6,7).equals("3") && !birthday.substring (7,8).equals("0")){
					out.println("<script>alert('30일을 초과했습니다.');</script>");
					flag = false;
				}
			}
		}
	}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2> 학생 정보 입력 결과</h2>\r\n");
      out.write("동의여부 : ");
      out.print( agreeable);
      out.write("<p>\r\n");
      out.write("\r\n");
      out.write("성명 : ");
      out.print( name);
      out.write("<p>\r\n");
      out.write("생년월일 : ");
      out.print( birthday);
      out.write("<p>\r\n");
      out.write("휴대폰 번호 : ");
      out.print( number);
      out.write("<p>\r\n");
      out.write("IP : ");
      out.print( IPAdress );
      out.write("<p>\r\n");
      out.write("시간 : ");
      out.print( time );
      out.write("<p>\r\n");
      out.write("\r\n");
      out.write("\r\n");

if(flag){
	try {
	   File sFile = new File("D://Programing Folder/Web/University/Agreement/WebContent/test.txt");
	   sFile.createNewFile();
	   BufferedWriter fw = new BufferedWriter(new FileWriter("D://Programing Folder/Web/University/Agreement/WebContent/test.txt",true));
	   fw.write(agreeable+" "+name+" "+birthday+" "+number+" "+IPAdress+" "+ time);
	   fw.newLine();
	   fw.close();
	}catch(Exception e){
	   e.printStackTrace();
	}
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar flag = ");
      out.print( flag );
      out.write("\r\n");
      out.write("\tif(!flag){\r\n");
      out.write("\t\twindow.location = \"MainJ.jsp\";\r\n");
      out.write("\t}else {\r\n");
      out.write("\t\talert('완료되었습니다.');\r\n");
      out.write("\t\t\twindow.open('about:blank', '_self'); window.close();\r\n");
      out.write("\t\t\thistory.pushState(null, null, 'about:blank');\r\n");
      out.write("\t\t\twindow.onpopstate = function(event) {\r\n");
      out.write("\t\t\t\thistory.go(1);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
