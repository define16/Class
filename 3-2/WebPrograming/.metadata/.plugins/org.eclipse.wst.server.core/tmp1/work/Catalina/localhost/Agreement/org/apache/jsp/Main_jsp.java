/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2018-01-17 21:24:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>개인정보 활용 동의서</title>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"moblie.css\"/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function checkAble(frm){\r\n");
      out.write("\t   if(frm.agreeable.checked==true){\r\n");
      out.write("\t      frm.disagreeable.checked=false;\r\n");
      out.write("\t      frm.data_name.disabled=false;\r\n");
      out.write("\t      frm.data_birth.disabled=false;\r\n");
      out.write("\t      frm.data_phone.disabled=false;\r\n");
      out.write("\t      frm.submit_test.disabled=false;\r\n");
      out.write("\t   }\r\n");
      out.write("\t   else {\r\n");
      out.write("\t      frm.data_name.disabled=true;\r\n");
      out.write("\t      frm.data_birth.disabled=true;\r\n");
      out.write("\t      frm.data_phone.disabled=true;\r\n");
      out.write("\t      frm.submit_test.disabled=true;\r\n");
      out.write("\t   }\r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t  function checkDisable(frm){\r\n");
      out.write("\t   if(frm.disagreeable.checked==true){\r\n");
      out.write("\t      frm.agreeable.checked=false;\r\n");
      out.write("\t      frm.data_name.disabled=true;\r\n");
      out.write("\t      frm.data_birth.disabled=true;\r\n");
      out.write("\t      frm.data_phone.disabled=true;\r\n");
      out.write("\t      frm.submit_test.disabled=false;\r\n");
      out.write("\t   }\r\n");
      out.write("\t   else {\r\n");
      out.write("\t      frm.data_name.disabled=true;\r\n");
      out.write("\t      frm.data_birth.disabled=true;\r\n");
      out.write("\t      frm.data_phone.disabled=true;\r\n");
      out.write("\t      frm.submit_test.disabled=true;\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\t  }\r\n");
      out.write("    \r\n");
      out.write("    function nowtime() {\r\n");
      out.write("    \tvar meg;\r\n");
      out.write("        var today = new Date();\r\n");
      out.write("        \r\n");
      out.write("        var year = today.getFullYear();\r\n");
      out.write("        var month = today.getMonth()+1;\r\n");
      out.write("        var day = today.getDate();\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        var h = today.getHours();\r\n");
      out.write("        var m = today.getMinutes();\r\n");
      out.write("        var s = today.getSeconds();\r\n");
      out.write("\r\n");
      out.write("     \th=dasi(h);\r\n");
      out.write("     \tm=dasi(m);\r\n");
      out.write("    \ts=dasi(s);\r\n");
      out.write("\r\n");
      out.write("    \tdocument.getElementById('time').value = year + \"-\" + month + \"-\" + day + \" \" + h + \" : \" + m + \" : \" + s;\r\n");
      out.write("    \tvar t = setTimeout(function(){nowtime()},1000000);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function dasi(i) {\r\n");
      out.write("    \tif(i<10) {\r\n");
      out.write("    \t\ti= \"0\" + i;\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t}\r\n");
      out.write("    return i;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<header data-role=\"header\">\r\n");
      out.write("\t<h1>개인정보 활용 동의서</h1>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("본인은 한림대학교  공과대학 SW캠프에 참석하기 위해 융합소프트웨어학과에 개인정보 공유를 동의합니다.\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<form name=\"form\"  method=\"post\" action=\"Result.jsp\" onsubmit=\"nowtime()\">\r\n");
      out.write("<center>\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"agreeable\" onclick=\"checkAble(this.form)\" value=\"1\">\r\n");
      out.write("\t\t<label>동의</label>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"disagreeable\" onclick=\"checkDisable(this.form)\" value=\"1\" >\r\n");
      out.write("\t\t<label>동의하지않음</label>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t<input type=\"text\" name=\"data_name\" placeholder=\"이름\" disabled>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"data_birth\" placeholder=\"생년월일 ex) 19010101\" disabled>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"data_phone\" placeholder=\"휴대폰 번호\" disabled>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"time\" id=\"time\" style=\" display: none\" >\r\n");
      out.write("\t</td>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t\t<input type=\"submit\" name=\"submit_test\" value=\"확인\" disabled >\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
