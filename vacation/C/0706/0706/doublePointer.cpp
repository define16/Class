#include "config.h"

void main() {

	int a = 100, b[] = {1, 2, 3, 4, 5}, *p1, *p2;
	p1 = &a;
	p2 = b;

//	포인터의 포인터(이중 포인터) : 포인터가 할당된 메모리의 주소를 기억한다. 포인터의 주소를 기억한다.
	int **p3;				// 이중 포인터는 선언시 변수 앞에 "*"을 2개를 붙인다.
//	p3 = 100;				// 에러
//	p3 = a;					// 에러
//	p3 = &a;				// 이중 포인터에 일반 변수의 주소를 대입했으므로 에러가 발생된다.
//	p3 = p1;				// 이중 포인터에 포인터에 저장된 일반 변수의 주소를 대입했으므로 에러가 발생된다.
	p3 = &p1;				// 이중 포인터에 포인터의 주소를 대입했으므로 정상 처리된다.

	cout << "일반 변수 a에 저장된 값 : " << a << endl;
	cout << "일반 변수 a가 메모리에 생성된 주소 : " << &a << endl;
	cout << "포인터 p1에 저장된 값 : " << p1 << endl;
	cout << "포인터 p1이 참조하는 값 : " << *p1 << endl;
	cout << "================================================================" << endl;
	cout << "포인터 p1이 메모리에 생성된 주소 : " << &p1 << endl;
	cout << "포인터 p3에 저장된 값 : " << p3 << endl;
	cout << "포인터 p3이 참조하는 값 : " << *p3 << endl;
	cout << "포인터 p3이 참조에 참조하는 값 : " << **p3 << endl;

	int ***p4;				// 삼중 포인터, 이중 포인터의 주소를 기억한다.
	p4 = &p3;
	cout << "포인터 p4가 참조에 참조에 참조하는 값 : " << ***p4 << endl;
	int ****p5;				// 사중 포인터, 삼중 포인터의 주소를 기억한다.
	p5 = &p4;
	cout << "포인터 p5가 참조에 참조에 참조에 참조하는 값 : " << ****p5 << endl;

}