#include "config.h"

//	struct 구조체이름 {
//	[접근 권한 지정자:]			// 접근 권한 생략시 public이 기본 접근 권한이다.
//		구조체 멤버 변수 정의;
//		...;
//	};
struct a {
	int x;
};

//	class 클래스이름 {
//	[접근 권한 지정자:]			// 접근 권한 생략시 private이 기본 접근 권한이다.
//		클래스 멤버 변수 정의;
//		...;
//	[접근 권한 지정자:]
//		클래스 멤버 함수 정의;
//		...;
//	};
class b {
	int x;
};

//	접근 권한 지정자
//	private : 현재 클래스 외부에서 접근할 수 없다. 상속 불가능
//	protected : 현재 클래스와 현재 클래스를 상속받은 자식 클래스만 접근할 수 있다. 상속 가능
//	public : 모든 클래스에서 자유롭게 접근할 수 있다. 상속 가능

void main() {

//	구조체 변수 선언
//	[struct] 구조체이름 구조체변수명;
//	[struct] 구조체이름 구조체변수명 = {초기치};
//	[struct] 구조체이름 구조체배열명[첨자];
//	[struct] 구조체이름 *구조체포인터;
	struct a aaa;

//	클래스 객체(변수, 인스턴스) 선언
//	[class] 클래스이름 객체명;			// 기본 생성자를 이용해 객체가 생성된다.
//	[class] 클래스이름 객체명(인수);	// 인수를 넘겨받는 생성자를 이용해 객체가 생성된다.
//	[class] 클래스이름 객체명[첨자];	// 클래스(객체) 배열
//	[class] 클래스이름 *포인터명;		// 클래스 포인터
//	메모리에 클래스 객체를 생성하고 객체가 생성된 시작 주소를 포인터에 넣어준다.
//	[class] 클래스이름 *포인터명 = new 생성자(인수);
	class b bbb;

//	구조체, 클래스 멤버에 접근하는 방법
//	변수명 또는 객체명에는 "."을 찍어 멤버에 접근한다.
//	포인터에는 "->"를 찍어 멤버에 접근한다.
	aaa.x = 100;		// a 구조체의 멤버 변수 x의 접근 권한이 public이므로 정상 처리
//	bbb.x = 100;		// b 클래스의 멤버 변수 x의 접근 권한이 private이므로 에러 발생

}