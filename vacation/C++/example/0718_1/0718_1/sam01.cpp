#include "config.h"

//struct 구조체이름 {
//	[접근 권한 지정자:]		// 접근 권한 생략시 public이 기본 접근 권한이다.
//		멤버 변수 정의;
//		.....;
//		}
struct a
{
	int x;
};


//class 클래스이름 {
//	[접근 권한 지정자:]		// 접근 권한 생략시 private이 기본 접근 권한이다.
//		클래스 멤버 변수 정의;
//		.....;
//		};

class b
{
	int x;
};

//	접근 권한 지정자
//	private : 현재 클래스 외부에서 접근할 수 없다. 상속 불가능...
//	protected : 현재 클래스와 현재 클래스를 상속받은 자식 클래스만 접근할 수 있다. 상속가능. 자물쇠모양
//	public : 모든 클래스에서 자유롭게 접근 할 수 있다. 상속 가능. 황금열쇠모양


void main()
{
// 구조체 변수 선언 
// [struct] 구조체이름 구조체변수명;
// [struct] 구조체이름 구조체변수명 = {초기치};
// [struct] 구조체이름 구조체배열명[첨자];
// [struct] 구조체이름 *구조체포인터;

	struct a aaa;	//struct 생략가능, 구조체 선언 

// 클래스 객체(변수,인스턴스) 선언;
// [class] 클래스이름 객체명;				//기본생성자를 이용해 객체가 생성된다.
// [class] 클래스이름 객체명(인수);	//인수를 넘겨받는 생성자를 이용해 객체가 생성된다.
// [class] 클래스이름 객체명[첨자];
// [class] 클래스이름 *포인터명;
// 메모리에 클래스 객체를 생성하고 객체가 생성된 시작 주소를 포인터에 넣어준다.
// [class] 클래스이름 *포인터명 = new 생성자(인수);

	class b bbb;

// 구조체, 클래스 멤버에 접근하는 방법
// 변수명 또는 객체명에는 "."을 찍어서 멤버에 접근한다.
// 포인터에는 "->"를 찍어 멤버에 접근한다.

	aaa.x = 100; //구조체 접근방법 a구조체의 x의 접근 권한이 public이므로 정상 처리.
//	bbb.x = 100; //에러, b클래스의 멤버 변수 x의 접근 권한이 private이므로 에러 발생.


}


