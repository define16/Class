import java.io.File;
import java.io.FileInputStream;
import java.util.Arrays;

import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 * @author JunHyeong Cho
 *
 *         목표 : 어레이리스트에 날짜, 키워드, 키워드 갯수 저장 1. 분기마다 키워드를 합치고, 같은 키워드는 갯수세기 2. 같은
 *         키워드 삭제 3. 데이터베이스 연동(새로운 클래스 만들기)
 */

public class Parser {

	public void xlsx(Data d, Mining m, String fileName) {
		// xlsx

		FileInputStream xlsxFile;
		XSSFWorkbook workbook;
		XSSFSheet sheet;

		String[] date = null;
		String[] year = null;
		String[] quarter = null;
		String[] category = null;
		String[] keyword = null;
		String[] count = null;


		int xlsxRows = 0;

		try {
			xlsxFile = new FileInputStream(
					new File("D:\\대학교\\4학년 1학기\\U-캡스톤디자인\\기타\\자료\\기사(5년)\\" + fileName + ".xlsx"));
			// 파일 스트림을 XSSFWorkbook 객체로

			workbook = new XSSFWorkbook(xlsxFile); // XSSFWorkbook 의 첫번째 시트를 가져옴
			sheet = workbook.getSheetAt(0);

			xlsxRows = sheet.getPhysicalNumberOfRows();
			date = new String[xlsxRows];

			for (int rownum = 1; rownum < xlsxRows; rownum++) {
				XSSFRow xlsxRow = sheet.getRow(rownum); // 셀정보

				keyword = d.makeKeywords(xlsxRow.getCell(14).toString());
				
				//키워드 정제(한자, 영어, 숫자제거)
				for (int i = 0; i < keyword.length; i++) {
					if (m.Englishs(keyword[i]) || m.Chinese_Character(keyword[i]) || m.isStringDouble(keyword[i])) {
						keyword[i] = "0a0";
					}
				}

				d.setKeywords(keyword);

				date = new String[keyword.length];
				year = new String[keyword.length];
				quarter = new String[keyword.length];
				category = new String[keyword.length];
				count = new String[keyword.length];				
				
				for (int i = 0; i < keyword.length; i++) {
					
					date[i] = xlsxRow.getCell(1).toString();
					year[i] = date[i].substring(0, 4);
					count[i] = null;

					// 분기 계산
					if (Integer.parseInt(date[i].substring(4, 6)) < 4) {
						quarter[i] = "1";
					} else if (Integer.parseInt(date[i].substring(4, 6)) > 3
							&& Integer.parseInt(date[i].substring(4, 6)) < 7) {
						quarter[i] = "2";
					} else if (Integer.parseInt(date[i].substring(4, 6)) > 6
							&& Integer.parseInt(date[i].substring(4, 6)) < 10) {
						quarter[i] = "3";
					} else {
						quarter[i] = "4";
					}
					
					// 신문 분류
					if (fileName.indexOf("정치") != -1) {
						category[i] = "0";
					} else if (fileName.indexOf("경제") != -1) {
						category[i] = "1";
					} else if (fileName.indexOf("IT과학") != -1) {
						category[i] = "2";
					} else if (fileName.indexOf("문화") != -1) {
						category[i] = "3";
					} else if (fileName.indexOf("사회") != -1) {
						category[i] = "4";
					}

				}

				d.setYear(year);
				d.setQuarter(quarter);
				d.setCategory(category);
				

				d.makeKeywordset(d.getYear(),d.getQuarter(), d.getCategory(), keyword, count); // save in arrayList
			}

//			System.out.println("1 " + d.getKeywordset().size());
//			 for(int i = 0; i< d.getKeywordset().size(); i++) {
//				 for(int j = 0 ; j < d.getKeywordset().get(i).length; j++)
//					 System.out.print(d.getKeywordset().get(i)[j] + " ");
//				System.out.println();
//			 }

			xlsxFile.close();
		} catch (Exception a) {

		}

	}

	public void xlsx_data(DB db, String fileName) {
		
		FileInputStream xlsxFile;
		XSSFWorkbook workbook;
		XSSFSheet sheet;

		String year = null;
		String quarter = null;
		String category = null;
		String keyword = null;
		String count = null;
		
		String[] CheckKeyword = null;
		int CheckKeywordIndex = 0;
		
		int xlsxRows = 0;

		try {
			xlsxFile = new FileInputStream(new File("D:\\대학교\\4학년 1학기\\U-캡스톤디자인\\기타\\자료\\정재된 자료\\" + fileName + ".xlsx"));
			// 파일 스트림을 XSSFWorkbook 객체로
			workbook = new XSSFWorkbook(xlsxFile); // XSSFWorkbook 의 첫번째 시트를 가져옴
			sheet = workbook.getSheetAt(0);
			xlsxRows = sheet.getPhysicalNumberOfRows();
			//System.out.println("test: "+xlsxRows);
			XSSFRow xlsxRow;
			//System.out.println(xlsxRows);
			CheckKeyword = new String[xlsxRows];

//			for (int rownum = 0; rownum < xlsxRows; rownum++) {
				for (int rownum = 0; rownum < 50; rownum++) {
				xlsxRow = sheet.getRow(rownum); // 셀정보

				year = xlsxRow.getCell(0).toString();
				quarter = xlsxRow.getCell(1).toString();
				category = xlsxRow.getCell(2).toString();
				keyword = xlsxRow.getCell(3).toString();
				count = xlsxRow.getCell(4).toString();
				System.out.println(keyword);
				if(!Arrays.asList(CheckKeyword).contains(keyword)) {
					CheckKeyword[CheckKeywordIndex] = keyword;
					CheckKeywordIndex++;
					System.out.println("중복아님");
				}else {
					System.out.println("중복");
				}
				

//				db.insertData("Main", year, quarter, category, keyword, count);
			}
			xlsxFile.close();
	}catch(Exception e){ 
	System.out.println(e.getMessage());
}

}


	public void xls() {
		// xls 방법 1
		try {
			FileInputStream xlsFile = new FileInputStream(new File("c:\\hh.xls")); // 파일 스트림을 XSSFWorkbook 객체로 생성
			HSSFWorkbook workbook2 = new HSSFWorkbook(xlsFile); // XSSFWorkbook 의 첫번째 시트를 가져옴
			HSSFSheet sheet2 = workbook2.getSheetAt(0);
			int xlsRows = sheet2.getPhysicalNumberOfRows();
			for (int rownum = 1; rownum < xlsRows; rownum++) {
				HSSFRow xlsRow = sheet2.getRow(rownum);
				xlsRow.getCell(1).toString();
				xlsRow.getCell(2).toString();
				System.out.println("================================");
				for (int i = 0; i < xlsRow.getLastCellNum(); i++)
					System.out.println(i + "번째 열: " + xlsRow.getCell(i));
			}

			xlsFile.close();
		} catch (Exception a) {

		}

	}

}
